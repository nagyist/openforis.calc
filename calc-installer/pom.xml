<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.openforis.calc</groupId>
		<artifactId>calc</artifactId>
		<version>2.1-a19</version>
	</parent>

	<artifactId>calc-installer</artifactId>
	<packaging>pom</packaging>

	<name>Open Foris Calc Installer</name>
	<description>Module to create the installers for Open Foris Calc. They are produced by running the package phase with -Passembly parameter</description>

	<properties>
		<!-- to avoid replacing relative path to images and other resources used by the installer -->
		<installer-dir>src/main/installer</installer-dir>
		
		<installbuilder-file-name>openforiscalc_installbuilder.xml</installbuilder-file-name>
		<installbuilder-with-jdk-file-name>openforiscalc_installbuilder_jdk.xml</installbuilder-with-jdk-file-name>
		<!-- installer file names -->
		<windows-installer-file-name>OpenForisCalc-${project.version}-windows-installer.exe</windows-installer-file-name>
		<linux-installer-file-name>OpenForisCalc-${project.version}-linux-installer.run</linux-installer-file-name>
		<osx-installer-file-name>OpenForisCalc-${project.version}-osx-installer.app</osx-installer-file-name>	
	</properties>
	
	<profiles>
		<profile>
			<id>assembly</id>
			<build>
				<plugins>
					
					
					<!-- 1. extract jre and collect-assembly into build folder  -->
<!-- 					<plugin> -->
<!-- 						<groupId>org.apache.maven.plugins</groupId> -->
<!-- 						<artifactId>maven-dependency-plugin</artifactId> -->
<!-- 						<version>2.6</version> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<id>unpack-jre</id> -->
<!-- 								<phase>process-sources</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>unpack</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<artifactItems> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>linux-i386</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>linux-x64</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>osx</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>windows-i386</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>windows-x64</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>solaris-intel</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>com.oracle.java</groupId> -->
<!-- 											<artifactId>jdk</artifactId> -->
<!-- 											<version>${jre.version}</version> -->
<!-- 											<classifier>solaris-sparc</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-dir}/java</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>org.openforis.collect</groupId> -->
<!-- 											<artifactId>collect-assembly</artifactId> -->
<!-- 											<version>${project.version}</version> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-build-path}/</outputDirectory> -->
<!-- 										</artifactItem> -->
<!-- 									</artifactItems> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
<!-- 							<execution> -->
<!-- 								<id>copy-autoupdater</id> -->
<!-- 								<phase>process-sources</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>copy</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<artifactItems> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>org.openforis.collect</groupId> -->
<!-- 											<artifactId>collect-autoupdater</artifactId> -->
<!-- 											<version>${project.version}</version> -->
<!-- 											<classifier>windows</classifier> -->
<!-- 											<type>exe</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-build-path}</outputDirectory> -->
<!-- 											<destFileName>${windows-autoupdater-file-name}</destFileName> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>org.openforis.collect</groupId> -->
<!-- 											<artifactId>collect-autoupdater</artifactId> -->
<!-- 											<version>${project.version}</version> -->
<!-- 											<classifier>linux</classifier> -->
<!-- 											<type>run</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-build-path}</outputDirectory> -->
<!-- 											<destFileName>${linux-autoupdater-file-name}</destFileName> -->
<!-- 										</artifactItem> -->
<!-- 										<artifactItem> -->
<!-- 											<groupId>org.openforis.collect</groupId> -->
<!-- 											<artifactId>collect-autoupdater</artifactId> -->
<!-- 											<version>${project.version}</version> -->
<!-- 											<classifier>osx</classifier> -->
<!-- 											<type>zip</type> -->
<!-- 											<overWrite>false</overWrite> -->
<!-- 											<outputDirectory>${installer-build-path}</outputDirectory> -->
<!-- 											<destFileName>${osx-autoupdater-file-name}</destFileName> -->
<!-- 										</artifactItem> -->
<!-- 									</artifactItems> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
					
					
					<!-- 2. copy installbuilder source files -->
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.6</version>
						<executions>
						
							<execution>
								<id>copy-installbuilder-source-file</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${installer-dir}</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/resources</directory>
											<includes>
								                <include>${installbuilder-file-name}</include>
<!-- 								                <include>${installbuilder-with-jdk-file-name}</include> -->
								            </includes>
										</resource>
									</resources>
						            <overwrite>true</overwrite>
								</configuration>
							</execution>
						
						</executions>
					</plugin>
					
					<!-- 3. replace calc version into the xml installbuilder source file -->
					<!-- 4. replace the output directory of the installer with the project.build.directory property-->
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>maven-replacer-plugin</artifactId>
						<version>1.4.0</version>
						<executions>
							<execution>
								<id>replace-project-version</id>
								<phase>package</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<includes>
										<include>${installer-dir}/${installbuilder-file-name}</include>
<!-- 										<include>${installer-dir}/${installbuilder-with-jdk-file-name}</include> -->
									</includes>
									<regex>false</regex>
									<replacements>
										<replacement>
											<!-- the name of the token to replace -->
											<token>PROJECT_VERSION</token>
											<!-- replace it with the Maven project version -->
											<value>${project.version}</value>
										</replacement>
										<replacement>
											<!-- the name of the token to replace -->
											<token>OUTPUT_DIRECTORY</token>
											<!-- replace it with the Maven project version -->
											<value>${project.build.directory}</value>
										</replacement>
									</replacements>
								</configuration>
							</execution>
						</executions>
						
					</plugin>
				
					<!-- 5. execute installbuilder to produce the installers -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.1</version>
						<executions>
							<execution>
								<id>windows-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>windows</argument>
									</arguments>
								</configuration>
							</execution>
							
<!-- 							<execution> -->
<!-- 								<id>windows-installer-with-jdk</id> -->
<!-- 								<phase>package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>exec</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<executable>${installbuilder.builder.executable}</executable>	 -->
<!-- 									<arguments> -->
<!-- 										<argument>build</argument> -->
<!-- 										<argument>${basedir}/${installer-dir}/${installbuilder-with-jdk-file-name}</argument> -->
<!-- 										<argument>windows</argument> -->
<!-- 									</arguments> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
							
							<!-- 									<executable>${installbuilder-home}/bin/builder</executable> -->
							
							<execution>
								<id>linux-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>								
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>linux</argument>
									</arguments>
								</configuration>
							</execution>
							
<!-- 							<execution> -->
<!-- 								<id>linux-installer-with-jdk</id> -->
<!-- 								<phase>package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>exec</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<executable>${installbuilder.builder.executable}</executable>	 -->
<!-- 									<arguments> -->
<!-- 										<argument>build</argument> -->
<!-- 										<argument>${basedir}/${installer-dir}/${installbuilder-with-jdk-file-name}</argument> -->
<!-- 										<argument>linux</argument> -->
<!-- 									</arguments> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
							<execution>
								<id>linux-x64-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>								
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>linux-x64</argument>
									</arguments>
								</configuration>
							</execution>
							
							<execution>
								<id>osx-installer</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${installbuilder.builder.executable}</executable>								
									<arguments>
										<argument>build</argument>
										<argument>${basedir}/${installer-dir}/${installbuilder-file-name}</argument>
										<argument>osx</argument>
									</arguments>
								</configuration>
							</execution>
							
<!-- 							<execution> -->
<!-- 								<id>osx-installer-with-jdk</id> -->
<!-- 								<phase>package</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>exec</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<executable>${installbuilder.builder.executable}</executable>								 -->
<!-- 									<arguments> -->
<!-- 										<argument>build</argument> -->
<!-- 										<argument>${basedir}/${installer-dir}/${installbuilder-with-jdk-file-name}</argument> -->
<!-- 										<argument>osx</argument> -->
<!-- 									</arguments> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->

						</executions>
					</plugin>
					
			    	<!-- 6. attach installers as artifact -->
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>build-helper-maven-plugin</artifactId>
					    <executions>
					        <execution>
					            <id>attach-installer-artifacts</id>
					            <phase>package</phase>
					            <goals>
					                <goal>attach-artifact</goal>
					            </goals>
					            <configuration>
					                <artifacts>
					                    <artifact>
					                        <file>${project.build.directory}/${windows-installer-file-name}</file>
					                        <classifier>windows</classifier>
					                        <type>exe</type>
					                    </artifact>
					                    <artifact>
					                        <file>${project.build.directory}/${linux-installer-file-name}</file>
					                        <classifier>linux</classifier>
					                        <type>run</type>
					                    </artifact>
<!-- 					                    <artifact> -->
<!-- 					                        <file>${project.build.directory}/${osx-installer-file-name}</file> -->
<!-- 					                        <classifier>osx</classifier> -->
<!-- 					                        <type>dmg</type> -->
<!-- 					                    </artifact> -->
					                </artifacts>
					            </configuration>
					        </execution>
					    </executions>
					</plugin>
				
				</plugins>
			</build>		
		</profile>
	</profiles>


</project>
